/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    output reg [55:0] real_output,
    output reg [2:0] real_output_new,
    input real_input,
    output reg [6:0] display_lives,
    output reg [6:0] display_msb,
    output reg [6:0] display_lsb
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [1-1:0] M_shoot_conditioner_out;
  reg [1-1:0] M_shoot_conditioner_in;
  button_conditioner_2 shoot_conditioner (
    .clk(clk),
    .in(M_shoot_conditioner_in),
    .out(M_shoot_conditioner_out)
  );
  wire [1-1:0] M_shoot_edge_out;
  reg [1-1:0] M_shoot_edge_in;
  edge_detector_3 shoot_edge (
    .clk(clk),
    .in(M_shoot_edge_in),
    .out(M_shoot_edge_out)
  );
  wire [7-1:0] M_missile_fsm_first;
  wire [7-1:0] M_missile_fsm_second;
  wire [7-1:0] M_missile_fsm_third;
  wire [7-1:0] M_missile_fsm_fourth;
  wire [7-1:0] M_missile_fsm_fifth;
  wire [7-1:0] M_missile_fsm_sixth;
  wire [7-1:0] M_missile_fsm_seventh;
  wire [7-1:0] M_missile_fsm_eighth;
  wire [7-1:0] M_missile_fsm_ninth;
  wire [8-1:0] M_missile_fsm_score_out;
  wire [3-1:0] M_missile_fsm_lives_out;
  reg [1-1:0] M_missile_fsm_shoot;
  missile_fsm_4 missile_fsm (
    .clk(clk),
    .rst(rst),
    .shoot(M_missile_fsm_shoot),
    .first(M_missile_fsm_first),
    .second(M_missile_fsm_second),
    .third(M_missile_fsm_third),
    .fourth(M_missile_fsm_fourth),
    .fifth(M_missile_fsm_fifth),
    .sixth(M_missile_fsm_sixth),
    .seventh(M_missile_fsm_seventh),
    .eighth(M_missile_fsm_eighth),
    .ninth(M_missile_fsm_ninth),
    .score_out(M_missile_fsm_score_out),
    .lives_out(M_missile_fsm_lives_out)
  );
  
  wire [7-1:0] M_seven_seg_lives_out;
  reg [3-1:0] M_seven_seg_lives_lives;
  seven_seg_lives_5 seven_seg_lives (
    .lives(M_seven_seg_lives_lives),
    .out(M_seven_seg_lives_out)
  );
  
  wire [7-1:0] M_seven_seg_score_lsb;
  wire [7-1:0] M_seven_seg_score_msb;
  reg [8-1:0] M_seven_seg_score_score;
  seven_seg_score_6 seven_seg_score (
    .score(M_seven_seg_score_score),
    .lsb(M_seven_seg_score_lsb),
    .msb(M_seven_seg_score_msb)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    M_shoot_conditioner_in = real_input;
    M_shoot_edge_in = M_shoot_conditioner_out;
    M_missile_fsm_shoot = M_shoot_edge_out;
    real_output = 56'h00000000000000;
    real_output[49+6-:7] = M_missile_fsm_first;
    real_output[42+6-:7] = M_missile_fsm_second;
    real_output[35+6-:7] = M_missile_fsm_third;
    real_output[28+6-:7] = M_missile_fsm_fourth;
    real_output[21+6-:7] = M_missile_fsm_fifth;
    real_output[14+6-:7] = M_missile_fsm_sixth;
    real_output[7+6-:7] = M_missile_fsm_seventh;
    real_output[0+6-:7] = M_missile_fsm_eighth;
    real_output_new = M_missile_fsm_ninth[2+2-:3];
    M_seven_seg_lives_lives = M_missile_fsm_lives_out;
    display_lives = M_seven_seg_lives_out;
    M_seven_seg_score_score = M_missile_fsm_score_out;
    display_lsb = M_seven_seg_score_lsb;
    display_msb = M_seven_seg_score_msb;
  end
endmodule
